# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Deploy

on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - 'python-coverage-comment-action.txt'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: [ "python:3.10" ]
    container:
      image: ${{ matrix.container }}

    steps:
      - uses: actions/checkout@v2

      - name: Cache virtualenvironment
        uses: actions/cache@v2
        with:
          path: ~/.venv
          key: ${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}

      - name: Upgrade pip
        run: pip install --upgrade pip

      - name: Create and activate Virtualenv
        run: |
          pip install virtualenv
          [ ! -d ".venv" ] && virtualenv .venv
          . .venv/bin/activate

      - name: Install dependencies
        run: pip install -r requirements-dev.txt

      - name: Run black formatter check
        run: black --check .

      - name: Run flake8 formatter check
        run: flake8 .

      - name: Run isort formatter check
        run: isort .

      - name: Test with pytest
        run: coverage run -m pytest

      - name: Coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v3
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt

      - name: Post comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_PR_RUN_ID: ${{ github.event.workflow_run.id }}

      - name: Install pypa/build
        run: >-
          python -m
          pip install
          build
          --user

      - name: Build a binary wheel and a source tarball
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/
          .

      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}